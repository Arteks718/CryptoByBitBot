const { Markup, Scenes, session } = require("telegraf");
const { bot, users } = require("./config.js");
const inputAPIKeys = require("./inputAPIKeys.js");
const { mainKeyboard } = require("./keyboards.js")


module.exports = async (ctx) => {
  try {
    // await users.findOneAndDelete({ idTelegram: ctx.chat.id });
    // –ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    greeting(ctx);
  } catch (error) {
    console.log(error);
  }
};


bot.action("yesAPI", async (ctx) => chooseButtonAPI(ctx, true));
bot.action("noAPI", async (ctx) => chooseButtonAPI(ctx, false));

const greeting = async (ctx) => {
  if (await users.findOne({ idTelegram: ctx.chat.id })) {
    ctx.replyWithHTML("–í—ñ—Ç–∞—é!‚úã\n–†–∞–¥–∏–π –∑–Ω–æ–≤—É –í–∞—Å –±–∞—á–∏—Ç–∏!üôÇ", mainKeyboard);
  } else {
    await ctx.reply("–ü—Ä–∏–≤—ñ—Ç, –≤—ñ—Ç–∞—é —Ç–µ–±–µ —É –±–æ—Ç—ñ CryptoByBitBot!üôÇ", Markup.removeKeyboard());
    setTimeout(async () => await ctx.replyWithHTML(`–ë–æ—Ç –ø—Ä–∞—Ü—é—î –∑ —Ä–∏–Ω–∫–∞–º–∏ —Å–ø–æ—Ç—É —Ç–∞ –¥–∏—Ä–µ–≤–∞—Ç–∏–≤—ñ–≤(USDT –±–µ–∑—Å—Ç—Ä–æ–∫–æ–≤—ñ) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á—ñ –∫—Ä–∏–ø—Ç–æ–±—ñ—Ä–∂—É ByBitüìà`),1500)
    setTimeout(async () => await ctx.replyWithHTML(`üë®‚Äçüíª–ê–≤—Ç–æ—Ä–æ–º —Ç–∞ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–æ–º —î <a href="https://t.me/ARTEKS718">ARTEKS718</a>, –∑ –ø—Ä–∏–≤–æ–¥—É –±–∞–≥—ñ–≤, –ø–∏—Ç–∞–Ω—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—åüì©`), 3000)
    setTimeout(async () => await ctx.replyWithHTML(
      `–î–ª—è –ø—Ä–∞—Ü–µ–∑–¥—ñ–±–Ω–æ—Å—Ç—ñ –±—ñ–ª—å—à–æ—Å—Ç—ñ —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∏ –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ —Å–≤—ñ–π API Key —Ç–∞ API Secret Key –∫—Ä–∏–ø—Ç–æ–±—ñ—Ä–∂—ñ ByBit, —è–∫—ñ –º–æ–∂–Ω–∞ —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ –∫—Ä–∏–ø—Ç–æ–±—ñ—Ä–∂—ñ –ø–µ—Ä–µ–π—à–æ–≤—à–∏ –∑–∞ <a href="https://www.bybit.com/app/user/api-management">—Ü–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è</a>`
    ), 4000)

    await users.insertOne({
      idTelegram: ctx.chat.id,
      status: "buttonSelection",
    });

    setTimeout(async () => await ctx.replyWithHTML("–ß–∏ –±–∞–∂–∞—î—Ç–µ –≤–≤–µ—Å—Ç–∏ –∫–ª—é—á—ñ?", {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–¢–∞–∫", callback_data: "yesAPI" }],
          [{ text: "–ù—ñ", callback_data: "noAPI" }],
        ],
      },
    }), 6000)
  }
};

const chooseButtonAPI = async (ctx, button) => {
  try {
    // –í–∏–¥–∞–ª–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    ctx.deleteMessage(ctx.inlineMessageId);
    if (button) {
      users.updateOne(
        { idTelegram: ctx.chat.id },
        { $set: { status: "inputAPIKey" , chooseButtonAPI: button}}
      );
      await inputAPIKeys(ctx, "mainMenu");
    } else{
      ctx.reply("–ó—Ä–æ–∑—É–º—ñ–≤, —Ç–æ–¥—ñ –≤ –±—É–¥—å —è–∫–∏–π —ñ–Ω—à–∏–π –º–æ–º–µ–Ω—Ç —É –∫–æ–º–∞–Ω–¥—ñ /settings –≤–∏ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—ó API ");
      users.updateOne(
        { idTelegram: ctx.chat.id },
        { $set: { status: "mainMenu" , chooseButtonAPI: button}}
      );
      ctx.reply("–û–±–µ—Ä—ñ—Ç—å –æ–¥–∏–Ω –∑ —Ä–∏–Ω–∫—ñ–≤", mainKeyboard);
    }
  } catch (error) {
    console.log(error);
  }
};