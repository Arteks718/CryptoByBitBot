const { bot } = require("./config.js");
const { Scenes } = require("telegraf");

bot.action("infoTickers", (ctx) => {
  ctx.replyWithHTML(
    "Користувач вводить символ за яким він бажає отримати детальну інформацію. Символ виглядає як пара двох символів, альткоїна(наприклад BTC) та стейблкоїна(USDT). Стейблкоїн USDT постійно дорівнюї 1 долар США, це для того щоб легче та краще розуміти ціну визначеної криптовалюти. Після введення символа, кортисувач отримує інформації, у вигляді:\nСимвол;\nОстання ціна криптовалюти;\nРинкова ціна 24 години тому;\nВідсоткова ринкова зміна ціни за 24 години;\nНайвища ціна за 24 години;\nНайнижча ціна за 24 години;\nОб'єм торгівлі за 24 години\nОборот торгівлі за 24 години.\n\n"
  );
});
bot.action("infoOrderBook", (ctx) => {
  ctx.replyWithHTML(
    "Order Book(книга замовлень) - це список замовлень, що створюють користувачі за визначеної ціної та об'ємом, які виражаються у $ США. У боті користувач може запросити книгу замовлень за визначеним символом та отримати по 25 ордерів(за замовчуванням, або більше, якщо введе запит за спеціальним форматом) на купівлю та продаж. "
  );
});
bot.action("infoQueryKline", (ctx) => {
  ctx.replyWithHTML(
    "Query Kline(клин запит) - це функція яка виводить ціну за символом, яка була визначена з якимось інтервалом часу. Користувач робить запит за параметрами які йому потрібні. Перший з них це символ для пошуку. Другий це interval(інтервал часу), тобто, це який проміжок часу між якими буде визначатись ціни для виведення, наприклад, інтервал у 60 секунд, це значить, що різница у часі між першої ціною і другої буде у 60 секунд. Третій параметр - це ліміт запитів, він не є обов'язковим, бо складає за замовчуванням 25 запитів, але користувач може його змінити(не може перевищувати 100).");
});
bot.action("infoAmendOrder", (ctx) => {
  ctx.replyWithHTML("Amend Order(зміна замовлення) - це функція завдяки якої можна змінювати вже існуюче замовлення, вона працює лише на ринку деривативів. Вона може приймати 6 параметрів запиту, а саме: символ, номер замовлення, кількість, ціна, ціна отримання прибутків та ціна зупинки збитків. Поля <b>символ та номер замовлення є обов'язковими для заповнення</b>, усі інші не є обов'язковими, тому якщо немає потреби якийсь з них заповнювати, тому будь-ласка на місці якогось з параметрів введіть значення <b>0</b>\nСимвол(symbol) - це параметр за яким буде відбуватися пошук, у якого саме символа і буде відбуватися зміна замовлення.\nНомер замовлення(orderId) - даний параметр потрібен для уточнення, яке саме замовлення буде змінюватись\nКількість(quantity) - це поле, при введенні якого можна змінювати кількість самого замовлення\nЦіна(price) - це поле, при введенні якого буде змінюватись ціна замовлення\nЦіна отримання прибутків(takeProfit) - це поле, при введенні якого буде змінюватись ціна отримання прибутків\nЦіна стопу збитків(stopLoss) - це поле, при введенні якого буде змінюватись ціна стопу збитків");
})
bot.action("infoPlaceOrder", (ctx) => {
  ctx.replyWithHTML("Place Order()");
});
bot.action("infoCancelOrder", (ctx) => {
  ctx.replyWithHTML(
    "Cancel Active Order(відміна активного замовлення) - ця функція яка відміняє активне замовлення на ринку диривативів за назвою символа та ідентифікаційним номером самого ордера, який можна отримати з функції GetActiveOrder, але дана функція може відміняти ті ордери, які не були виконані або виконані частично."
  );
});
bot.action("infoCancelAllOrder", (ctx) => {
  ctx.replyWithHTML(
    "Cancel All Active Orders(відміна всіх активних замовлень) - назва функції сама каже за себе, то що вона відміняє усі активні ордери користувача на ринку диривативів, які не були виконані або виконані частично"
  );
});
bot.action("infoGetOpenOrder", (ctx) => {
  ctx.replyWithHTML(
    "Get Active Order(отримання активного замовлення) - ця функція виконує виведення усіх активних замовлень користувача на ринку диривативів, вона потребує обов'язкого введення API Key та API Secret юзера, без них даною функцієї не можна буде користуватись"
  );
});
bot.action("infoGetOrdersHistory", (ctx) => {
  ctx.replyWithHTML("");
});
bot.action("infoGetWalletBalance", (ctx) => {
  ctx.replyWithHTML(
    "Get Wallet Balance(отримання балансу гаманця) - ця функція виводить у подробицях баланс гаманця користувача за ринком деривіативів. Ця функція буде дуже зручно тим користувачам, у яких досить слабкий зв'язок Інтернету, для того щоб зайти на сайт/додаток біржі ByBit для перегляду балансу свого гаманця"
  );
});

const infoScene = new Scenes.BaseScene('info')

infoScene.enter(ctx => {
  return ctx.replyWithHTML(
    "Натисніть на кнопку потрібної Вам функції, для отримання більш детальної інформації:",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "Tickers", callback_data: "infoTickers" }],
          [{ text: "Order Book", callback_data: "infoOrderBook" }],
          [{ text: "Query Kline", callback_data: "infoQueryKline" }],
          [{ text: "Amend Order", callback_data: "infoAmendOrder" }],
          [{ text: "Place Order", callback_data: "infoPlaceOrder" }],
          [{ text: "Cancel Order", callback_data: "infoCancelOrder" }],
          [{ text: "Cancel All Orders", callback_data: "infoCancelAllOrder" }],
          [{ text: "Get Open Orders", callback_data: "infoGetOpenOrders" }],
          [{ text: "Get Orders History", callback_data: "infoGetOrdersHistory" }],
          [{ text: "Get Wallet Balance", callback_data: "infoGetWalletBalance" }],
        ],
      },
    }
  );
})

module.exports = { infoScene }